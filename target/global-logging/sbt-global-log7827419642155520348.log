[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 634.459963ms
[debug]       Load.loadUnit: defsScala took 0.509262ms
[debug] [Loading] Scanning directory /Users/duyhoang/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/duyhoang/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 47.532396 ms
[debug]           Load.resolveProject(global-plugins) took 388.441078ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/duyhoang/.sbt/1.0/plugins, plugins: List(<none>))) took 741.203164ms
[debug] [Loading] Done in /Users/duyhoang/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 800.736789ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.510061ms
[debug]     Load.loadUnit(file:/Users/duyhoang/.sbt/1.0/plugins/, ...) took 1630.835398ms
[debug]   Load.apply: load took 3383.849992ms
[debug]   Load.apply: resolveProjects took 14.569289ms
[debug]   Load.apply: finalTransforms took 389.496113ms
[debug]   Load.apply: config.delegates took 178.368948ms
[debug]   Load.apply: Def.make(settings)... took 1702.491861ms
[debug]   Load.apply: structureIndex took 304.389965ms
[debug]   Load.apply: mkStreams took 2.014279ms
[info] loading global plugins from /Users/duyhoang/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 16131.99949ms
[debug]           Load.loadUnit: plugins took 48.480612ms
[debug]           Load.loadUnit: defsScala took 0.003698ms
[debug] [Loading] Scanning directory /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/project
[debug]             Load.loadUnit: mkEval took 11.410713ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.474912 ms
[info] loading settings for project bookflix-build from plugins.sbt ...
[debug]               Load.resolveProject(bookflix-build) took 11.359349ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bookflix-build, base: /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/project, plugins: List(<none>))) took 15.808957ms
[debug] [Loading] Done in /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/project, returning: (bookflix-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7495.241957ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.848964ms
[debug]         Load.loadUnit(file:/Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/project/, ...) took 7549.481815ms
[debug]       Load.apply: load took 7551.074811ms
[debug]       Load.apply: resolveProjects took 0.108335ms
[debug]       Load.apply: finalTransforms took 93.659515ms
[debug]       Load.apply: config.delegates took 0.662028ms
[debug]       Load.apply: Def.make(settings)... took 705.355768ms
[debug]       Load.apply: structureIndex took 82.404067ms
[debug]       Load.apply: mkStreams took 0.002586ms
[info] loading project definition from /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9568.33017ms
[debug]     Load.loadUnit: defsScala took 0.004293ms
[debug] [Loading] Scanning directory /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix
[debug]       Load.loadUnit: mkEval took 0.367777ms
[debug] [Loading] Found root project rootProject w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalafmt.sbt.ScalafmtPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalafmt.sbt.ScalafmtPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.scalafmt.sbt.ScalafmtPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.329869 ms
[info] loading settings for project rootProject from build.sbt ...
[debug]         Load.resolveProject(rootProject) took 21.545997ms
[debug]       Load.loadTransitive: finalizeProject(Project(id rootProject, base: /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix, plugins: List(<none>))) took 25.689926ms
[debug] [Loading] Done in /Users/duyhoang/Desktop/Github_Projects_2024/Bookflix, returning: (rootProject)
[debug]     Load.loadUnit: loadedProjectsRaw took 4225.820756ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.700809ms
[debug]   Load.loadUnit(file:/Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/, ...) took 13797.061828ms
[debug] Load.apply: load took 13798.944254ms
[debug] Load.apply: resolveProjects took 0.103604ms
[debug] Load.apply: finalTransforms took 40.7024ms
[debug] Load.apply: config.delegates took 2.047744ms
[debug] Load.apply: Def.make(settings)... took 296.364388ms
[debug] Load.apply: structureIndex took 118.355873ms
[debug] Load.apply: mkStreams took 0.002859ms
[info] set current project to bookflix (in build file:/Users/duyhoang/Desktop/Github_Projects_2024/Bookflix/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/duyhoang/.sbt/1.0/server/94e5cc438efef309ab48/sock
[debug] Writing bsp connection file
[info] started sbt server
